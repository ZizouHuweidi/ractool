generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GENDER {
  MALE
  FEMALE
}

enum ROLE {
  PRESIDENT
  VICE_PRESIDENT
  SECRETARY
  SARGENT_AT_ARMS
  TREASURER
}

enum ACTIVITY_TYPE {
  EVENT
  MEETING
}

//model Admin {
//  id    Int     @id @default(autoincrement())
//  email String  @unique
//  password  String
//  firstName  String
//  lastName  String
//  role ROLE
//}

model Member {
  id             Int          @id @default(autoincrement())
  email          String       @unique
  password       String
  //createdAt      DateTime     @default(now())
  //updatedAt      DateTime     @updatedAt
  role           ROLE
  firstName      String
  lastName       String
  gender         GENDER?
  dob            DateTime
  phone          Int
  address        String?
  startedAt      DateTime?
  bio            String?
  membershipFee  Int
  membershipPaid Int
  Receipts       Receipt[]
  Attendance     Attendance[]
}

model Activity {
  id          Int           @id @default(autoincrement())
  name        String
  description String
  location    String
  date        DateTime
  type        ACTIVITY_TYPE
  //createdAt   DateTime      @default(now())
  //updatedAt   DateTime      @updatedAt
  //Reminders   Reminder[]
  Attendance  Attendance[]
}

// Define the Attendance schema
model Attendance {
  id         Int      @id @default(autoincrement())
  memberId   Int
  member     Member   @relation(fields: [memberId], references: [id])
  activityId Int
  activity   Activity @relation(fields: [activityId], references: [id])
  attended   Boolean  @default(false)
  //createdAt  DateTime @default(now())
  //updatedAt  DateTime @updatedAt

  // Add a unique constraint to ensure each member can only attend an event once
  @@unique([memberId, activityId])
  // Add foreign keys to enforce referential integrity between Attendance and Member/Event
  @@index([memberId], name: "member_id_idx")
  @@index([activityId], name: "activity_id_idx")
}

model Notification {
  id      Int    @id @default(autoincrement())
  title   String
  content String
}

model Receipt {
  id       Int      @id @default(autoincrement())
  date     DateTime
  amount   Int
  member   Member   @relation(fields: [memberId], references: [id])
  memberId Int
}
