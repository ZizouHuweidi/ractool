generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GENDER {
  male
  female
}

enum ROLE {
  president
  vice_president
  secretary
  sargent_at_arms
  treasurer
  member
}

enum STATUS {
  present
  late
  absent
}

model Member {
  id             Int          @id @default(autoincrement())
  email          String       @unique
  password       String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now()) @updatedAt
  role           ROLE
  firstName      String
  lastName       String
  gender         GENDER?
  dob            DateTime
  phone          Int
  address        String?
  startedAt      DateTime?
  bio            String?
  membershipFee  Int
  membershipPaid Int
  receipts       Receipt[]
  attendances    Attendance[]
}

model Activity {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  location    String
  date        DateTime
  type        String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now()) @updatedAt
  attendance  Attendance[]
}

model Attendance {
  member     Member   @relation(fields: [memberId], references: [id])
  memberId   Int
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  status     STATUS   @default(absent)

  @@id([activityId])
  // Add foreign keys to enforce referential integrity between Attendance and Member/Event
  @@index([memberId], name: "member_id_idx")
  @@index([activityId], name: "activity_id_idx")
}

model Notification {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
}

model Receipt {
  id        Int      @id @default(autoincrement())
  date      DateTime @default(now())
  amount    Int
  member    Member   @relation(fields: [memberId], references: [id])
  memberId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
